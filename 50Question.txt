1) What are comments?
Comments are discriptions of what is going on with the code you are writting comments about. 
Because of the apporiate syntax the compiler will skip these comments whe the program is run.
2) Demonstrate at least 2 ways to create a comment. One should be for multiple lines.
#
"""
muliti lines of comments
"""
3) If the name of a file is app.py what do we type in the command line to tell our computer to run it?
python3 app.py

4) Demonstrate how I can tell a Python program to display something in the command line.
print()
5) What can we use to save a value for later use in our code? Provide an example.
we would use a variable. Ex. x = 5 
6) What can I do to prevent certain files and directories from being tracked by git?
Files that you do not wish to track should be added to a gitignore file.

7) What can be used in order to repeat some block of code? Provide 2 examples.
by using loops. A loop is a block of code that will repeat over and over again. 

There are two types of loops, “while loops” and “for loops”. While loops will repeat while a condition is true, and for loops will repeat a certain number of times.

8) When saving a value for later use what type of operator do we use?
=
9) What's the key difference between git revert and git reset?
revert saves history, were as , reset deletes all history.
10) What's the key difference between Python lists and tuples?
list are mutable were as, tuples are immutable.
11) What can I do to know where I am within my file system?
pwd
12) Describe the anatomy of a Python dictionary and create one below.

Dictionaries are written with curly brackets and have keys and values

mydict = {
  "Brand": "Ford"
  "Model": "Mustang"
  "Year" : "1964"
}
13) What type of values can be in a Python dictionary?
any value, save special term used by python.
14) What type of values can be in a Python list?
Lists can contain elements of various data types.

15) What data type are True and False?
boolean
16) What language does your computer understand?
binary code
17) What do we need in order for your computer to make use of programming languages?
a compiler
18) At what index is your instructor's name located in this list? ["Ron", "Troy", "Martha"]
uno
19) What does frontend / client side mean?
The front side what the user sees.
20) What does backend / server side mean?
The back side or what the user does not see.
21) What are 3 way to create a Python string?
Using single double or triple quotes.
22) What are 2 types of number data types in Python? Provide an example.
Int and float 24 2.4
23) Are we able to add two strings together? How?
Yes, You can join strings using either the addition (+) operator or the String's concat() method.
24) What commands would you use to create the following file structure? (write every command line by line):
  Desktop
    -> projects
        -> instagram
            -> images
                -> profile_image.jpg
            -> app.py
        -> tiktok
            -> clips
            -> app.py
            From the desktop you would cd into projects, cd into instagram cd into images, 
            and ls. Cd .. back once then cd into TikTok cd into clips and ls.

25) What is the path to profile_image.jpg?
esktop/projects/instagram/images/profile_image.jpg
26) What commands can I use to get from the clips directory to the images directory? (write every command line by line):
command line by line):
Cd ..
Cd ..
Cd ..
Cd images
Ls.

27) What method can I use to change this string from "troy" to "Troy"? 
string.replace("troy", "Troy",)
28) What method can I use to change this string from "TROY" to "troy"?
string.replace("Troy", "troy")
29) How can I check to see if all of the characters in a string are numbers/digits?
Call the built-in str. isdecimal() method on the target string str to return a boolean value
 that represents whether all characters of the string are numeric digits or not.
30) How can I split a string into a list with each value in the list being a line of the string?
The split() method splits a string into a list. You can specify the separator, default separator is any whitespace.
31) What are the Python comparison operators? List each and describe.
+ addition x+y
- subtraction x - y
* multiplication x * y
/ division x / y
% modulus x % y
** exponentiation x ** y
// floor division x // y
32) What are the Python logical operators? List each and describe.
and	True if both are true	x and y
or	True if at least one is true	x or y
not	True only if false	not x

33) How can we decide to run one piece of code versus another? Provide an example.
functions
34) What can I do to work on my primary code, but not mess it up? Provide an example.
ut a branch and work on the code.
Git branch "Name"
35) What do I do in order to make sure I have the latest code on my machine?
Git pull from the main branch at the beginning of your session as well as after merges.

36) How can I accept user input into my Python code?
The input() command allows you to require a user to enter a string or number while a program is running.

37) How can I see all of my git commits?
git log --oneline
38) How can I add a value to a Python list?
There are four methods to add elements to a List in Python.

append(): append the object to the end of the list.
insert(): inserts the object before the given index.
extend(): extends the list by appending elements from the iterable.
List Concatenation: We can use + operator to concatenate multiple lists and create a new list.
39) How can I remove a value from a Python list?
In Python, use list methods clear() , pop() , and remove() to remove items (elements) from a list.
40) How can I access a value in a Python dictionary?
Method #1 : Using in operator.
Method #2 : Using list comprehension.
Method #3 : Using dict.items()
Method #4 : Using enumerate()
41) How can I remove a value from a Python dictionary?
42) How can I change a value in a Python dictionary?
43) What is a pull request? Describe it in detail.
44) Why do we use services like Github?
45) How can I create a git branch?
46) How can I switch to another branch?
47) What happens if multiple engineers try to change the same area of a codebase from different points in time?
48) What are the 3 stages of of tracking our work with git?
49) What are the commands we'd use, in order, to move our changes through these stages?
50) Is spacing in my Python code important? Why?